# GitHub Action to run Pest tests for Laravel with PostgreSQL and Redis.
#
# Adjusted on the top of wieni/github-action-setup-php collection
# @see https://github.com/wieni/github-action-setup-php/blob/main/examples/laravel-postgres.yml

name: Test (Pest)
on:
    push:
        branches:
            - main
            - dev
    pull_request:
        branches:
            - main
            - dev
jobs:
    test:
        name: Test (Pest)
        runs-on: ubuntu-latest
        env:
            BROADCAST_DRIVER: log
            CACHE_DRIVER: redis
            QUEUE_CONNECTION: redis
            SESSION_DRIVER: redis
            DB_CONNECTION: pgsql
            DB_HOST: localhost
            DB_PASSWORD: postgres
            DB_USERNAME: postgres
            DB_DATABASE: postgres

        # Docs: https://docs.github.com/en/actions/using-containerized-services
        services:
            postgres:
                image: postgres:17
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_DB: postgres
                ports:
                    - 5432/tcp
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3

            redis:
                image: redis
                ports:
                    - 6379/tcp
                options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

        strategy:
            fail-fast: false
            matrix:
                php-versions: ['8.4']

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            # Docs: https://github.com/shivammathur/setup-php
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-versions }}
                  extensions: mbstring, dom, fileinfo, pgsql
                  coverage: xdebug

            - name: Get Composer cache directory
              id: composer-cache
              run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            - name: Cache composer dependencies
              uses: actions/cache@v4
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-

            - name: Install Composer dependencies
              run: composer install --no-interaction --no-progress --prefer-dist --optimize-autoloader

            - name: Prepare the application
              run: |
                  php -r "file_exists('.env') || copy('.env.example', '.env');"
                  php artisan key:generate

            - name: Clear Config
              run: php artisan config:clear

            - name: Get bun cache directory
              id: bun-cache
              run: echo "dir=node_modules" >> $GITHUB_OUTPUT

            - name: Cache bun dependencies
              uses: actions/cache@v4
              with:
                  path: ${{ steps.bun-cache.outputs.dir }}
                  key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
                  restore-keys: ${{ runner.os }}-bun-

            - name: Install Bun
              run: |
                  curl -fsSL https://bun.sh/install | bash
                  echo "$HOME/.bun/bin" >> $GITHUB_PATH

            - name: Install Node dependencies and build frontend assets
              run: |
                  bun install
                  bun run build

            - name: Run Migration
              run: php artisan migrate -v
              env:
                  DB_PORT: ${{ job.services.postgres.ports[5432] }}
                  REDIS_HOST: localhost
                  REDIS_PORT: ${{ job.services.redis.ports['6379'] }}

            - name: Run Pest with coverage
              run: XDEBUG_MODE=coverage vendor/bin/pest --parallel --coverage-clover clover.xml
              env:
                  DB_PORT: ${{ job.services.postgres.ports[5432] }}
                  REDIS_HOST: localhost
                  REDIS_PORT: ${{ job.services.redis.ports['6379'] }}

            - if: ${{ github.event_name == 'pull_request' }}
              name: Download artifact
              uses: dawidd6/action-download-artifact@v9
              continue-on-error: true
              with:
                  workflow: .github/workflows/coverage-report.yml
                  branch: main

            - name: Upload coverage results
              uses: actions/upload-artifact@v4
              with:
                  name: coverage
                  path: clover.xml

            - if: ${{ github.event_name != 'pull_request' }}
              uses: actions/upload-artifact@v4
              with:
                  name: coverage-report
                  path: tests/coverage.xml

            - if: ${{ github.event_name == 'pull_request' }}
              name: Coverage report
              uses: lucassabreu/comment-coverage-clover@v0.15.3
              with:
                  file: clover.xml
                  base-file: tests/base/coverage.xml
                  show-percentage-change-on-table: true
                  with-branches: true
                  github-token: ${{ secrets.GITHUB_TOKEN }}
